[[1;34mINFO[m] Scanning for projects...
[[1;33mWARNING[m] 
[[1;33mWARNING[m] Some problems were encountered while building the effective model for jflex:jflex:jar:0.0.1-SNAPSHOT
[[1;33mWARNING[m] 'build.plugins.plugin.version' for org.codehaus.mojo:exec-maven-plugin is missing. @ line 57, column 11
[[1;33mWARNING[m] 
[[1;33mWARNING[m] It is highly recommended to fix these problems because they threaten the stability of your build.
[[1;33mWARNING[m] 
[[1;33mWARNING[m] For this reason, future Maven versions might no longer support building such malformed projects.
[[1;33mWARNING[m] 
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m----------------------------< [0;36mjflex:jflex[0;1m >-----------------------------[m
[[1;34mINFO[m] [1mBuilding jflex 0.0.1-SNAPSHOT[m
[[1;34mINFO[m] [1m--------------------------------[ jar ]---------------------------------[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-clean-plugin:2.5:clean[m [1m(default-clean)[m @ [36mjflex[0;1m ---[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:resources[m [1m(default-resources)[m @ [36mjflex[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] skip non existing resourceDirectory /home/jffk0586/eclipse-workspace/Jflex/src/main/resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:3.1:compile[m [1m(default-compile)[m @ [36mjflex[0;1m ---[m
[[1;34mINFO[m] Changes detected - recompiling the module!
[[1;34mINFO[m] Compiling 4 source files to /home/jffk0586/eclipse-workspace/Jflex/target/classes
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:testResources[m [1m(default-testResources)[m @ [36mjflex[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] skip non existing resourceDirectory /home/jffk0586/eclipse-workspace/Jflex/src/test/resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:3.1:testCompile[m [1m(default-testCompile)[m @ [36mjflex[0;1m ---[m
[[1;34mINFO[m] Changes detected - recompiling the module!
[[1;34mINFO[m] Compiling 1 source file to /home/jffk0586/eclipse-workspace/Jflex/target/test-classes
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-surefire-plugin:2.12.4:test[m [1m(default-test)[m @ [36mjflex[0;1m ---[m
[[1;34mINFO[m] Surefire report directory: /home/jffk0586/eclipse-workspace/Jflex/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running JsonBench.JsonBench.AppTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 sec

Results :

Tests run: 1, Failures: 0, Errors: 0, Skipped: 0

[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-jar-plugin:2.4:jar[m [1m(default-jar)[m @ [36mjflex[0;1m ---[m
[[1;34mINFO[m] Building jar: /home/jffk0586/eclipse-workspace/Jflex/target/jflex-0.0.1-SNAPSHOT.jar
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-shade-plugin:3.2.0:shade[m [1m(default)[m @ [36mjflex[0;1m ---[m
[[1;34mINFO[m] Including org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.72 in the shaded jar.
[[1;34mINFO[m] Including org.jetbrains.kotlin:kotlin-stdlib-common:jar:1.3.72 in the shaded jar.
[[1;34mINFO[m] Including org.jetbrains:annotations:jar:13.0 in the shaded jar.
[[1;34mINFO[m] Including org.openjdk.jmh:jmh-core:jar:1.22 in the shaded jar.
[[1;34mINFO[m] Including net.sf.jopt-simple:jopt-simple:jar:4.6 in the shaded jar.
[[1;34mINFO[m] Including org.apache.commons:commons-math3:jar:3.2 in the shaded jar.
[[1;34mINFO[m] Including org.openjdk.jmh:jmh-generator-annprocess:jar:1.22 in the shaded jar.
[[1;34mINFO[m] Replacing /home/jffk0586/eclipse-workspace/Jflex/target/benchmarks.jar with /home/jffk0586/eclipse-workspace/Jflex/target/jflex-0.0.1-SNAPSHOT-shaded.jar
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mexec-maven-plugin:3.0.0:exec[m [1m(run-benchmarks)[m @ [36mjflex[0;1m ---[m
# JMH version: 1.22
# VM version: JDK 1.8.0_242, OpenJDK 64-Bit Server VM, 25.242-b08
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 1 iterations, 2 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: commons.commons.App.baselineReader
# Parameters: (factor = 100, input = 1)

# Run progress: 0.00% complete, ETA 00:01:42
# Fork: 1 of 1
# Warmup Iteration   1: 9354712+ 9294166+ 8172159+ 0.815 s/op
Iteration   1: 8251261+ 8152322+ 8189250+ 8227945+ 8351114+ 8182535+ 8221475+ 0.759 s/op
Iteration   2: 8221780+ 8251444+ 8147013+ 8284402+ 8197855+ 8202433+ 8159403+ 0.760 s/op
Iteration   3: 8145365+ 8119608+ 8173380+ 8211588+ 8132120+ 8160502+ 8276834+ 0.757 s/op


Result "commons.commons.App.baselineReader":
  0.759 Â±(99.9%) 0.028 s/op [Average]
  (min, avg, max) = (0.757, 0.759, 0.760), stdev = 0.002
  CI (99.9%): [0.731, 0.787] (assumes normal distribution)


# JMH version: 1.22
# VM version: JDK 1.8.0_242, OpenJDK 64-Bit Server VM, 25.242-b08
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 1 iterations, 2 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: commons.commons.App.baselineReader
# Parameters: (factor = 100, input = 2)

# Run progress: 16.67% complete, ETA 00:01:33
# Fork: 1 of 1
# Warmup Iteration   1: 9925146+ 8569131+ 9529089+ 0.845 s/op
Iteration   1: 8539956+ 8461587+ 8532327+ 8564431+ 8407693+ 8386941+ 8422464+ 0.789 s/op
Iteration   2: 8464456+ 8461037+ 8455483+ 8481607+ 8592996+ 8506814+ 8546853+ 0.791 s/op
Iteration   3: 8514871+ 8474343+ 8601358+ 8457315+ 8482705+ 8494668+ 8557840+ 0.791 s/op


Result "commons.commons.App.baselineReader":
  0.790 Â±(99.9%) 0.023 s/op [Average]
  (min, avg, max) = (0.789, 0.790, 0.791), stdev = 0.001
  CI (99.9%): [0.767, 0.814] (assumes normal distribution)


# JMH version: 1.22
# VM version: JDK 1.8.0_242, OpenJDK 64-Bit Server VM, 25.242-b08
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 1 iterations, 2 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: commons.commons.App.baselineReader
# Parameters: (factor = 1000, input = 1)

# Run progress: 33.33% complete, ETA 00:01:16
# Fork: 1 of 1
# Warmup Iteration   1: 85595729+ 7.887 s/op
Iteration   1: 88884660+ 8.086 s/op
Iteration   2: 88662981+ 8.085 s/op
Iteration   3: 82301670+ 7.542 s/op


Result "commons.commons.App.baselineReader":
  7.904 Â±(99.9%) 5.730 s/op [Average]
  (min, avg, max) = (7.542, 7.904, 8.086), stdev = 0.314
  CI (99.9%): [2.174, 13.634] (assumes normal distribution)


# JMH version: 1.22
# VM version: JDK 1.8.0_242, OpenJDK 64-Bit Server VM, 25.242-b08
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 1 iterations, 2 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: commons.commons.App.baselineReader
# Parameters: (factor = 1000, input = 2)

# Run progress: 50.00% complete, ETA 00:01:10
# Fork: 1 of 1
# Warmup Iteration   1: 84624356+ 7.764 s/op
Iteration   1: 86589866+ 7.876 s/op
Iteration   2: 80521278+ 7.425 s/op
Iteration   3: 80801063+ 7.423 s/op


Result "commons.commons.App.baselineReader":
  7.575 Â±(99.9%) 4.762 s/op [Average]
  (min, avg, max) = (7.423, 7.575, 7.876), stdev = 0.261
  CI (99.9%): [2.813, 12.337] (assumes normal distribution)


# JMH version: 1.22
# VM version: JDK 1.8.0_242, OpenJDK 64-Bit Server VM, 25.242-b08
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 1 iterations, 2 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: commons.commons.App.baselineReader
# Parameters: (factor = 10000, input = 1)

# Run progress: 66.67% complete, ETA 00:00:50
# Fork: 1 of 1
# Warmup Iteration   1: 929191225+ 85.161 s/op
Iteration   1: 952713992+ 86.674 s/op
Iteration   2: 896819359+ 81.821 s/op
Iteration   3: 896607141+ 81.840 s/op


Result "commons.commons.App.baselineReader":
  83.445 Â±(99.9%) 51.022 s/op [Average]
  (min, avg, max) = (81.821, 83.445, 86.674), stdev = 2.797
  CI (99.9%): [32.423, 134.467] (assumes normal distribution)


# JMH version: 1.22
# VM version: JDK 1.8.0_242, OpenJDK 64-Bit Server VM, 25.242-b08
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 1 iterations, 2 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: commons.commons.App.baselineReader
# Parameters: (factor = 10000, input = 2)

# Run progress: 83.33% complete, ETA 00:01:27
# Fork: 1 of 1
# Warmup Iteration   1: 869211886+ 80.082 s/op
Iteration   1: 896781030+ 81.766 s/op
Iteration   2: 840262070+ 76.901 s/op
Iteration   3: 839812364+ 76.810 s/op


Result "commons.commons.App.baselineReader":
  78.493 Â±(99.9%) 51.727 s/op [Average]
  (min, avg, max) = (76.810, 78.493, 81.766), stdev = 2.835
  CI (99.9%): [26.765, 130.220] (assumes normal distribution)


# Run complete. Total time: 00:12:32

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark           (factor)  (input)  Mode  Cnt   Score    Error  Units
App.baselineReader       100        1  avgt    3   0.759 Â±  0.028   s/op
App.baselineReader       100        2  avgt    3   0.790 Â±  0.023   s/op
App.baselineReader      1000        1  avgt    3   7.904 Â±  5.730   s/op
App.baselineReader      1000        2  avgt    3   7.575 Â±  4.762   s/op
App.baselineReader     10000        1  avgt    3  83.445 Â± 51.022   s/op
App.baselineReader     10000        2  avgt    3  78.493 Â± 51.727   s/op
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-install-plugin:2.4:install[m [1m(default-install)[m @ [36mjflex[0;1m ---[m
[[1;34mINFO[m] Installing /home/jffk0586/eclipse-workspace/Jflex/target/jflex-0.0.1-SNAPSHOT.jar to /home/jffk0586/.m2/repository/jflex/jflex/0.0.1-SNAPSHOT/jflex-0.0.1-SNAPSHOT.jar
[[1;34mINFO[m] Installing /home/jffk0586/eclipse-workspace/Jflex/pom.xml to /home/jffk0586/.m2/repository/jflex/jflex/0.0.1-SNAPSHOT/jflex-0.0.1-SNAPSHOT.pom
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[[1;34mINFO[m] [1;32mBUILD SUCCESS[m
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[[1;34mINFO[m] Total time:  12:35 min
[[1;34mINFO[m] Finished at: 2020-09-04T05:19:51+02:00
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
