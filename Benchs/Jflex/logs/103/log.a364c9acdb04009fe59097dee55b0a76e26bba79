[[1;34mINFO[m] Scanning for projects...
[[1;33mWARNING[m] 
[[1;33mWARNING[m] Some problems were encountered while building the effective model for jflex:jflex:jar:0.0.1-SNAPSHOT
[[1;33mWARNING[m] 'build.plugins.plugin.version' for org.codehaus.mojo:exec-maven-plugin is missing. @ line 57, column 11
[[1;33mWARNING[m] 
[[1;33mWARNING[m] It is highly recommended to fix these problems because they threaten the stability of your build.
[[1;33mWARNING[m] 
[[1;33mWARNING[m] For this reason, future Maven versions might no longer support building such malformed projects.
[[1;33mWARNING[m] 
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m----------------------------< [0;36mjflex:jflex[0;1m >-----------------------------[m
[[1;34mINFO[m] [1mBuilding jflex 0.0.1-SNAPSHOT[m
[[1;34mINFO[m] [1m--------------------------------[ jar ]---------------------------------[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-clean-plugin:2.5:clean[m [1m(default-clean)[m @ [36mjflex[0;1m ---[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:resources[m [1m(default-resources)[m @ [36mjflex[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] skip non existing resourceDirectory /home/jffk0586/eclipse-workspace/Jflex/src/main/resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:3.1:compile[m [1m(default-compile)[m @ [36mjflex[0;1m ---[m
[[1;34mINFO[m] Changes detected - recompiling the module!
[[1;34mINFO[m] Compiling 4 source files to /home/jffk0586/eclipse-workspace/Jflex/target/classes
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:testResources[m [1m(default-testResources)[m @ [36mjflex[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] skip non existing resourceDirectory /home/jffk0586/eclipse-workspace/Jflex/src/test/resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:3.1:testCompile[m [1m(default-testCompile)[m @ [36mjflex[0;1m ---[m
[[1;34mINFO[m] Changes detected - recompiling the module!
[[1;34mINFO[m] Compiling 1 source file to /home/jffk0586/eclipse-workspace/Jflex/target/test-classes
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-surefire-plugin:2.12.4:test[m [1m(default-test)[m @ [36mjflex[0;1m ---[m
[[1;34mINFO[m] Surefire report directory: /home/jffk0586/eclipse-workspace/Jflex/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running JsonBench.JsonBench.AppTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec

Results :

Tests run: 1, Failures: 0, Errors: 0, Skipped: 0

[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-jar-plugin:2.4:jar[m [1m(default-jar)[m @ [36mjflex[0;1m ---[m
[[1;34mINFO[m] Building jar: /home/jffk0586/eclipse-workspace/Jflex/target/jflex-0.0.1-SNAPSHOT.jar
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-shade-plugin:3.2.0:shade[m [1m(default)[m @ [36mjflex[0;1m ---[m
[[1;34mINFO[m] Including org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.72 in the shaded jar.
[[1;34mINFO[m] Including org.jetbrains.kotlin:kotlin-stdlib-common:jar:1.3.72 in the shaded jar.
[[1;34mINFO[m] Including org.jetbrains:annotations:jar:13.0 in the shaded jar.
[[1;34mINFO[m] Including org.openjdk.jmh:jmh-core:jar:1.22 in the shaded jar.
[[1;34mINFO[m] Including net.sf.jopt-simple:jopt-simple:jar:4.6 in the shaded jar.
[[1;34mINFO[m] Including org.apache.commons:commons-math3:jar:3.2 in the shaded jar.
[[1;34mINFO[m] Including org.openjdk.jmh:jmh-generator-annprocess:jar:1.22 in the shaded jar.
[[1;34mINFO[m] Replacing /home/jffk0586/eclipse-workspace/Jflex/target/benchmarks.jar with /home/jffk0586/eclipse-workspace/Jflex/target/jflex-0.0.1-SNAPSHOT-shaded.jar
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mexec-maven-plugin:3.0.0:exec[m [1m(run-benchmarks)[m @ [36mjflex[0;1m ---[m
# JMH version: 1.22
# VM version: JDK 1.8.0_242, OpenJDK 64-Bit Server VM, 25.242-b08
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 1 iterations, 2 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: commons.commons.App.baselineReader
# Parameters: (factor = 100, input = 1)

# Run progress: 0.00% complete, ETA 00:01:42
# Fork: 1 of 1
# Warmup Iteration   1: 9492407+ 9152137+ 8287027+ 0.811 s/op
Iteration   1: 8507119+ 8459268+ 8344156+ 8409586+ 8425454+ 8346536+ 8426553+ 0.774 s/op
Iteration   2: 8446939+ 8442849+ 8457070+ 8421610+ 8358804+ 8433694+ 8472635+ 0.775 s/op
Iteration   3: 8543557+ 8459939+ 8447366+ 8382852+ 8413553+ 8408364+ 8452676+ 0.776 s/op


Result "commons.commons.App.baselineReader":
  0.775 Â±(99.9%) 0.016 s/op [Average]
  (min, avg, max) = (0.774, 0.775, 0.776), stdev = 0.001
  CI (99.9%): [0.759, 0.791] (assumes normal distribution)


# JMH version: 1.22
# VM version: JDK 1.8.0_242, OpenJDK 64-Bit Server VM, 25.242-b08
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 1 iterations, 2 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: commons.commons.App.baselineReader
# Parameters: (factor = 100, input = 2)

# Run progress: 16.67% complete, ETA 00:01:35
# Fork: 1 of 1
# Warmup Iteration   1: 9367896+ 9157752+ 8079813+ 0.800 s/op
Iteration   1: 8205424+ 8157266+ 8031840+ 8194254+ 8032145+ 8004252+ 8127787+ 0.744 s/op
Iteration   2: 8190287+ 8186380+ 8103556+ 8201151+ 8212076+ 8198648+ 8231730+ 0.751 s/op
Iteration   3: 7997172+ 8131388+ 8132364+ 8078532+ 8035746+ 8075846+ 8253886+ 0.747 s/op


Result "commons.commons.App.baselineReader":
  0.747 Â±(99.9%) 0.065 s/op [Average]
  (min, avg, max) = (0.744, 0.747, 0.751), stdev = 0.004
  CI (99.9%): [0.682, 0.813] (assumes normal distribution)


# JMH version: 1.22
# VM version: JDK 1.8.0_242, OpenJDK 64-Bit Server VM, 25.242-b08
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 1 iterations, 2 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: commons.commons.App.baselineReader
# Parameters: (factor = 1000, input = 1)

# Run progress: 33.33% complete, ETA 00:01:14
# Fork: 1 of 1
# Warmup Iteration   1: 86336571+ 7.951 s/op
Iteration   1: 87760213+ 8.031 s/op
Iteration   2: 82112400+ 7.552 s/op
Iteration   3: 81971470+ 7.541 s/op


Result "commons.commons.App.baselineReader":
  7.708 Â±(99.9%) 5.103 s/op [Average]
  (min, avg, max) = (7.541, 7.708, 8.031), stdev = 0.280
  CI (99.9%): [2.605, 12.811] (assumes normal distribution)


# JMH version: 1.22
# VM version: JDK 1.8.0_242, OpenJDK 64-Bit Server VM, 25.242-b08
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 1 iterations, 2 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: commons.commons.App.baselineReader
# Parameters: (factor = 1000, input = 2)

# Run progress: 50.00% complete, ETA 00:01:08
# Fork: 1 of 1
# Warmup Iteration   1: 86697532+ 7.956 s/op
Iteration   1: 88925920+ 8.102 s/op
Iteration   2: 82609713+ 7.577 s/op
Iteration   3: 82533846+ 7.567 s/op


Result "commons.commons.App.baselineReader":
  7.749 Â±(99.9%) 5.579 s/op [Average]
  (min, avg, max) = (7.567, 7.749, 8.102), stdev = 0.306
  CI (99.9%): [2.170, 13.328] (assumes normal distribution)


# JMH version: 1.22
# VM version: JDK 1.8.0_242, OpenJDK 64-Bit Server VM, 25.242-b08
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 1 iterations, 2 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: commons.commons.App.baselineReader
# Parameters: (factor = 10000, input = 1)

# Run progress: 66.67% complete, ETA 00:00:50
# Fork: 1 of 1
# Warmup Iteration   1: 880440861+ 81.493 s/op
Iteration   1: 904301762+ 83.024 s/op
Iteration   2: 847207426+ 78.098 s/op
Iteration   3: 848370020+ 78.148 s/op


Result "commons.commons.App.baselineReader":
  79.757 Â±(99.9%) 51.622 s/op [Average]
  (min, avg, max) = (78.098, 79.757, 83.024), stdev = 2.830
  CI (99.9%): [28.134, 131.379] (assumes normal distribution)


# JMH version: 1.22
# VM version: JDK 1.8.0_242, OpenJDK 64-Bit Server VM, 25.242-b08
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 1 iterations, 2 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: commons.commons.App.baselineReader
# Parameters: (factor = 10000, input = 2)

# Run progress: 83.33% complete, ETA 00:01:24
# Fork: 1 of 1
# Warmup Iteration   1: 871399137+ 80.145 s/op
Iteration   1: 895652187+ 81.743 s/op
Iteration   2: 895802517+ 81.764 s/op
Iteration   3: 840020799+ 76.881 s/op


Result "commons.commons.App.baselineReader":
  80.129 Â±(99.9%) 51.321 s/op [Average]
  (min, avg, max) = (76.881, 80.129, 81.764), stdev = 2.813
  CI (99.9%): [28.808, 131.450] (assumes normal distribution)


# Run complete. Total time: 00:12:22

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark           (factor)  (input)  Mode  Cnt   Score    Error  Units
App.baselineReader       100        1  avgt    3   0.775 Â±  0.016   s/op
App.baselineReader       100        2  avgt    3   0.747 Â±  0.065   s/op
App.baselineReader      1000        1  avgt    3   7.708 Â±  5.103   s/op
App.baselineReader      1000        2  avgt    3   7.749 Â±  5.579   s/op
App.baselineReader     10000        1  avgt    3  79.757 Â± 51.622   s/op
App.baselineReader     10000        2  avgt    3  80.129 Â± 51.321   s/op
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-install-plugin:2.4:install[m [1m(default-install)[m @ [36mjflex[0;1m ---[m
[[1;34mINFO[m] Installing /home/jffk0586/eclipse-workspace/Jflex/target/jflex-0.0.1-SNAPSHOT.jar to /home/jffk0586/.m2/repository/jflex/jflex/0.0.1-SNAPSHOT/jflex-0.0.1-SNAPSHOT.jar
[[1;34mINFO[m] Installing /home/jffk0586/eclipse-workspace/Jflex/pom.xml to /home/jffk0586/.m2/repository/jflex/jflex/0.0.1-SNAPSHOT/jflex-0.0.1-SNAPSHOT.pom
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[[1;34mINFO[m] [1;32mBUILD SUCCESS[m
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[[1;34mINFO[m] Total time:  12:25 min
[[1;34mINFO[m] Finished at: 2020-09-04T05:45:33+02:00
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
