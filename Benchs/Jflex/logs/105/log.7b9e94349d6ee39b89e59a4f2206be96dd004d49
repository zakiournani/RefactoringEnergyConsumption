[[1;34mINFO[m] Scanning for projects...
[[1;33mWARNING[m] 
[[1;33mWARNING[m] Some problems were encountered while building the effective model for jflex:jflex:jar:0.0.1-SNAPSHOT
[[1;33mWARNING[m] 'build.plugins.plugin.version' for org.codehaus.mojo:exec-maven-plugin is missing. @ line 57, column 11
[[1;33mWARNING[m] 
[[1;33mWARNING[m] It is highly recommended to fix these problems because they threaten the stability of your build.
[[1;33mWARNING[m] 
[[1;33mWARNING[m] For this reason, future Maven versions might no longer support building such malformed projects.
[[1;33mWARNING[m] 
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m----------------------------< [0;36mjflex:jflex[0;1m >-----------------------------[m
[[1;34mINFO[m] [1mBuilding jflex 0.0.1-SNAPSHOT[m
[[1;34mINFO[m] [1m--------------------------------[ jar ]---------------------------------[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-clean-plugin:2.5:clean[m [1m(default-clean)[m @ [36mjflex[0;1m ---[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:resources[m [1m(default-resources)[m @ [36mjflex[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] skip non existing resourceDirectory /home/jffk0586/eclipse-workspace/Jflex/src/main/resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:3.1:compile[m [1m(default-compile)[m @ [36mjflex[0;1m ---[m
[[1;34mINFO[m] Changes detected - recompiling the module!
[[1;34mINFO[m] Compiling 4 source files to /home/jffk0586/eclipse-workspace/Jflex/target/classes
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:testResources[m [1m(default-testResources)[m @ [36mjflex[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] skip non existing resourceDirectory /home/jffk0586/eclipse-workspace/Jflex/src/test/resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:3.1:testCompile[m [1m(default-testCompile)[m @ [36mjflex[0;1m ---[m
[[1;34mINFO[m] Changes detected - recompiling the module!
[[1;34mINFO[m] Compiling 1 source file to /home/jffk0586/eclipse-workspace/Jflex/target/test-classes
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-surefire-plugin:2.12.4:test[m [1m(default-test)[m @ [36mjflex[0;1m ---[m
[[1;34mINFO[m] Surefire report directory: /home/jffk0586/eclipse-workspace/Jflex/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running JsonBench.JsonBench.AppTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.012 sec

Results :

Tests run: 1, Failures: 0, Errors: 0, Skipped: 0

[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-jar-plugin:2.4:jar[m [1m(default-jar)[m @ [36mjflex[0;1m ---[m
[[1;34mINFO[m] Building jar: /home/jffk0586/eclipse-workspace/Jflex/target/jflex-0.0.1-SNAPSHOT.jar
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-shade-plugin:3.2.0:shade[m [1m(default)[m @ [36mjflex[0;1m ---[m
[[1;34mINFO[m] Including org.jetbrains.kotlin:kotlin-stdlib:jar:1.3.72 in the shaded jar.
[[1;34mINFO[m] Including org.jetbrains.kotlin:kotlin-stdlib-common:jar:1.3.72 in the shaded jar.
[[1;34mINFO[m] Including org.jetbrains:annotations:jar:13.0 in the shaded jar.
[[1;34mINFO[m] Including org.openjdk.jmh:jmh-core:jar:1.22 in the shaded jar.
[[1;34mINFO[m] Including net.sf.jopt-simple:jopt-simple:jar:4.6 in the shaded jar.
[[1;34mINFO[m] Including org.apache.commons:commons-math3:jar:3.2 in the shaded jar.
[[1;34mINFO[m] Including org.openjdk.jmh:jmh-generator-annprocess:jar:1.22 in the shaded jar.
[[1;34mINFO[m] Replacing /home/jffk0586/eclipse-workspace/Jflex/target/benchmarks.jar with /home/jffk0586/eclipse-workspace/Jflex/target/jflex-0.0.1-SNAPSHOT-shaded.jar
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mexec-maven-plugin:3.0.0:exec[m [1m(run-benchmarks)[m @ [36mjflex[0;1m ---[m
# JMH version: 1.22
# VM version: JDK 1.8.0_242, OpenJDK 64-Bit Server VM, 25.242-b08
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 1 iterations, 2 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: commons.commons.App.baselineReader
# Parameters: (factor = 100, input = 1)

# Run progress: 0.00% complete, ETA 00:01:42
# Fork: 1 of 1
# Warmup Iteration   1: 9567419+ 9135475+ 8296853+ 0.812 s/op
Iteration   1: 8324808+ 8110147+ 8165812+ 8181192+ 8289286+ 8155985+ 8172159+ 0.749 s/op
Iteration   2: 8118083+ 8174234+ 8185648+ 8256266+ 8143472+ 8057292+ 8102030+ 0.746 s/op
Iteration   3: 8192850+ 8118082+ 8159769+ 8182291+ 8208475+ 8311685+ 8208658+ 0.752 s/op


Result "commons.commons.App.baselineReader":
  0.749 Â±(99.9%) 0.047 s/op [Average]
  (min, avg, max) = (0.746, 0.749, 0.752), stdev = 0.003
  CI (99.9%): [0.702, 0.796] (assumes normal distribution)


# JMH version: 1.22
# VM version: JDK 1.8.0_242, OpenJDK 64-Bit Server VM, 25.242-b08
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 1 iterations, 2 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: commons.commons.App.baselineReader
# Parameters: (factor = 100, input = 2)

# Run progress: 16.67% complete, ETA 00:01:32
# Fork: 1 of 1
# Warmup Iteration   1: 10114903+ 9830114+ 8907570+ 0.885 s/op
Iteration   1: 9075355+ 9036537+ 9072243+ 8978981+ 9047096+ 8987892+ 0.850 s/op
Iteration   2: 9051003+ 9029090+ 8974037+ 9015663+ 9391089+ 9144691+ 0.850 s/op
Iteration   3: 9041847+ 9076149+ 9027870+ 8965309+ 9036415+ 9113380+ 0.849 s/op


Result "commons.commons.App.baselineReader":
  0.850 Â±(99.9%) 0.011 s/op [Average]
  (min, avg, max) = (0.849, 0.850, 0.850), stdev = 0.001
  CI (99.9%): [0.838, 0.861] (assumes normal distribution)


# JMH version: 1.22
# VM version: JDK 1.8.0_242, OpenJDK 64-Bit Server VM, 25.242-b08
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 1 iterations, 2 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: commons.commons.App.baselineReader
# Parameters: (factor = 1000, input = 1)

# Run progress: 33.33% complete, ETA 00:01:13
# Fork: 1 of 1
# Warmup Iteration   1: 86014916+ 7.908 s/op
Iteration   1: 87900105+ 8.031 s/op
Iteration   2: 81781590+ 7.575 s/op
Iteration   3: 82108982+ 7.597 s/op


Result "commons.commons.App.baselineReader":
  7.734 Â±(99.9%) 4.692 s/op [Average]
  (min, avg, max) = (7.575, 7.734, 8.031), stdev = 0.257
  CI (99.9%): [3.043, 12.426] (assumes normal distribution)


# JMH version: 1.22
# VM version: JDK 1.8.0_242, OpenJDK 64-Bit Server VM, 25.242-b08
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 1 iterations, 2 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: commons.commons.App.baselineReader
# Parameters: (factor = 1000, input = 2)

# Run progress: 50.00% complete, ETA 00:01:08
# Fork: 1 of 1
# Warmup Iteration   1: 86490380+ 8.000 s/op
Iteration   1: 88188434+ 8.074 s/op
Iteration   2: 82333835+ 7.588 s/op
Iteration   3: 82417392+ 7.581 s/op


Result "commons.commons.App.baselineReader":
  7.748 Â±(99.9%) 5.165 s/op [Average]
  (min, avg, max) = (7.581, 7.748, 8.074), stdev = 0.283
  CI (99.9%): [2.582, 12.913] (assumes normal distribution)


# JMH version: 1.22
# VM version: JDK 1.8.0_242, OpenJDK 64-Bit Server VM, 25.242-b08
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 1 iterations, 2 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: commons.commons.App.baselineReader
# Parameters: (factor = 10000, input = 1)

# Run progress: 66.67% complete, ETA 00:00:49
# Fork: 1 of 1
# Warmup Iteration   1: 973249157+ 88.511 s/op
Iteration   1: 998132516+ 90.097 s/op
Iteration   2: 942762418+ 85.252 s/op
Iteration   3: 946146748+ 85.482 s/op


Result "commons.commons.App.baselineReader":
  86.944 Â±(99.9%) 49.867 s/op [Average]
  (min, avg, max) = (85.252, 86.944, 90.097), stdev = 2.733
  CI (99.9%): [37.076, 136.811] (assumes normal distribution)


# JMH version: 1.22
# VM version: JDK 1.8.0_242, OpenJDK 64-Bit Server VM, 25.242-b08
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: <none>
# Warmup: 1 iterations, 2 s each
# Measurement: 3 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: commons.commons.App.baselineReader
# Parameters: (factor = 10000, input = 2)

# Run progress: 83.33% complete, ETA 00:01:29
# Fork: 1 of 1
# Warmup Iteration   1: 875038165+ 80.986 s/op
Iteration   1: 898732990+ 82.478 s/op
Iteration   2: 843180764+ 77.664 s/op
Iteration   3: 844648716+ 77.768 s/op


Result "commons.commons.App.baselineReader":
  79.303 Â±(99.9%) 50.171 s/op [Average]
  (min, avg, max) = (77.664, 79.303, 82.478), stdev = 2.750
  CI (99.9%): [29.132, 129.474] (assumes normal distribution)


# Run complete. Total time: 00:12:48

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark           (factor)  (input)  Mode  Cnt   Score    Error  Units
App.baselineReader       100        1  avgt    3   0.749 Â±  0.047   s/op
App.baselineReader       100        2  avgt    3   0.850 Â±  0.011   s/op
App.baselineReader      1000        1  avgt    3   7.734 Â±  4.692   s/op
App.baselineReader      1000        2  avgt    3   7.748 Â±  5.165   s/op
App.baselineReader     10000        1  avgt    3  86.944 Â± 49.867   s/op
App.baselineReader     10000        2  avgt    3  79.303 Â± 50.171   s/op
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-install-plugin:2.4:install[m [1m(default-install)[m @ [36mjflex[0;1m ---[m
[[1;34mINFO[m] Installing /home/jffk0586/eclipse-workspace/Jflex/target/jflex-0.0.1-SNAPSHOT.jar to /home/jffk0586/.m2/repository/jflex/jflex/0.0.1-SNAPSHOT/jflex-0.0.1-SNAPSHOT.jar
[[1;34mINFO[m] Installing /home/jffk0586/eclipse-workspace/Jflex/pom.xml to /home/jffk0586/.m2/repository/jflex/jflex/0.0.1-SNAPSHOT/jflex-0.0.1-SNAPSHOT.pom
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[[1;34mINFO[m] [1;32mBUILD SUCCESS[m
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[[1;34mINFO[m] Total time:  12:51 min
[[1;34mINFO[m] Finished at: 2020-09-04T06:24:43+02:00
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
